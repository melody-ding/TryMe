import Utils from './Utils.js'
import ScratchBuffer from './ScratchBuffer.js'

export default class TargetDecryptionContext {
  /*
   * wasm
   * secretKey [Uint8Array SECRET_KEY_SIZE]
   * symmetricKey [Uint8Array AES_KEY_SIZE]
   */
  constructor(wasm, secretKey, symmetricKey) {
    const u = new Utils(wasm)

    this.wasm = wasm
    this.utils = u
    /*
     * cryptoContext *NewCryptoContext(const char *seedData, int seedDataLen);
     */
    this.context = wasm._NewCryptoContext(null, 0)
    this.scratchBuf = new ScratchBuffer(wasm)
    this.sk = secretKey
    this.skBuf = u.arrayToBuf(secretKey)
    this.symKey = symmetricKey
    this.symKeyBuf = u.arrayToBuf(symmetricKey)
  }

  clearBuf() {
    this.scratchBuf.clear()
  }

  free() {
    if (!this.context) return

    const w = this.wasm

    w._FreeCryptoContext(this.context)
    this.scratchBuf.free()
    w._free(this.skBuf.ptr)
    w._free(this.symKeyBuf.ptr)

    this.context = null
    this.scratchBuf = null
    this.sk = null
    this.skBuf = null
    this.symKey = null
    this.symKeyBuf = null
    this.utils = null
    this.wasm = null
  }
}
